// LPS 문제를 풀다가 힌트 부분의 정규식 표현을 보고 이해가 가지 않아
// 해당 부분에 대해서 공부해보았습니다.
const LPS = (str) => {
  const result = str.match(/^(\w*).*\1$/);
  return result[1].length;
};

// ^ : 문자열의 맨 앞부분과 대응한다.
// \w : 밑줄문자를 포함한, 영숫자 문자와 대응한다. [A-Za-z0-9]와 동일함. 
// . : line terminator를 제외한 모든 단일 문자와 대응시킨다.
// * : 다수의 문자열에 대응한다.
// \n : 앞 부분에 ()가 있으면, n번째 괄호에 대한 역참조를 실시한다.
//  $ : 문자열의 끝부분과 대응한다.
//!     /^(\w)/ 만 쓸 경우, 앞부분의 1번째 문자에만 대응하고,
//!     /^(\w*)/ 라고 쓸 경우 다수의 영숫자 문자와 대응하므로 모든 문자열에 대응한다.
//!     /^(\w*)./ 라고 쓸 경우 앞의 ^(\w*) 부분에서 다수의 영숫자 문자 전부와 대응했고
//      맨 뒤 . 하나만 남으므로 결과값으로 
//            ^(\w*) = 맨뒤 문자를 제외한 문자
//            . = 맨 뒤 1개문자 가 결과값이 된다.
//!     /^(\w*).*/ 라고 쓸 경우 ^(\w*) 부분이 우선적으로 문자열 전부에 대응하므로 .*에 대응하는 문자는 없다.
//!     /^(\w*).*(\1)/ 라고 쓸 경우 ^(\w*) 과 (\1) 부분이 같으므로, 문자열 내에 같은 패턴이 없으면 대응하지 않는다.
//                     따라서 .*에 대응되는 문자열 전체가 결과값이지만 각 그룹에 대응하는 값을 없다.
//!     /^(\w*).*(\1)$/ 라고 쓸경우 ^(\w*)는 문자열 앞에서, (\1)$는 문자열 뒤에서 탐색하므로 
//                     문자열의 앞부분과 끝부분에 같은 패턴이 있는 경우, 각 그룹에 해당 값을 넣는다.
//                     같은 패턴이 없는 경우 그룹에는 값이 들어가지않고, .*에 따라 결과값 (문자열 전체)만 출력된다.